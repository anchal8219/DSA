class Solution {
public:
    vector<int> searchRange(vector<int>& n, int target) {
        vector<int> res;
        int fInd=firstPos(n,target);
        int lInd=lastPos(n,target);
        res.push_back(fInd);
         res.push_back(lInd);
        return res;
    }
    
    int firstPos(vector<int>& n, int target) {
        int m,i=-1;
        int f=0,l=n.size()-1;
        
        while(f<=l){
            
             m=(f+l)/2;
             if(target>n[m])
                 f=m+1;
             else if(target<n[m])
                 l=m-1;
             else{
                  if(target==n[m]){
                      i=m;
                      l=m-1;
                  }
             }
               
        }
        return i;
        
    }
    int lastPos(vector<int>& n, int target) {
        int m,i=-1;
        int f=0,l=n.size()-1;
        while(f<=l){
             m=(f+l)/2;
             if(target>n[m])
                 f=m+1;
             else if(target<n[m])
                 l=m-1;
             else{
                  if(target==n[m]){
                      i=m;
                      f=m+1;
                  }
             }
            
               
        }    
        return i;
        
    }
        

};
