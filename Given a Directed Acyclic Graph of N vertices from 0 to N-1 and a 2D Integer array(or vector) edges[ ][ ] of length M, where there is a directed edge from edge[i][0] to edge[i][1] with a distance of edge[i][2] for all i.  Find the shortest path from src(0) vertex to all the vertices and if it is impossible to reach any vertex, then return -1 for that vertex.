# DSA
vector<int> shortestPath(int N,int M, vector<vector<int>>& edges){
        // code here
        vector<vector<int>>a[N];
        for(auto e :edges)
            a[e[0]].push_back({e[1],e[2]});

        vector<int>d(N,INT_MAX);
        d[0]=0;
        queue<int>q;
        q.push(0);
        
        while(q.size())
        {
            int node=q.front();
             q.pop();
            for(auto p:a[node]){
                int nbr=p[0] ;
                int dest=p[1];
                if(d[node]+dest<d[nbr]){
                    d[nbr]=d[node]+dest ;
                    q.push(nbr);
                }
            }
        }
        for(auto &a:d)
            if(a==INT_MAX) a=-1;
        return d ;
    }
